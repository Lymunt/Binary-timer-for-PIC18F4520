;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 21.04.2025 1:24:51
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF001EF78  	GOTO        752
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_pulse_e:
;DZ.c,45 :: 		void pulse_e() {
;DZ.c,46 :: 		LCD_EN = 1;
0x001C	0x8A8A      	BSF         LATB5_bit, BitPos(LATB5_bit+0) 
;DZ.c,47 :: 		Delay_us(1);
0x001E	0x0000      	NOP
0x0020	0x0000      	NOP
;DZ.c,48 :: 		LCD_EN = 0;
0x0022	0x9A8A      	BCF         LATB5_bit, BitPos(LATB5_bit+0) 
;DZ.c,49 :: 		Delay_us(40);
0x0024	0x0E21      	MOVLW       33
0x0026	0x6E0D      	MOVWF       R13, 0
L_pulse_e5:
0x0028	0x2E0D      	DECFSZ      R13, 1, 0
0x002A	0xD7FE      	BRA         L_pulse_e5
;DZ.c,51 :: 		}
L_end_pulse_e:
0x002C	0x0012      	RETURN      0
; end of _pulse_e
_lcd_cmd_4:
;DZ.c,53 :: 		void lcd_cmd_4(unsigned char cmd){
;DZ.c,54 :: 		LCD_D4 = (cmd >> 0) & 1;
0x002E	0x0E01      	MOVLW       1
0x0030	0x142A      	ANDWF       FARG_lcd_cmd_4_cmd, 0 
0x0032	0x6E00      	MOVWF       R0 
0x0034	0xB000      	BTFSC       R0, 0 
0x0036	0xD002      	BRA         L__lcd_cmd_450
0x0038	0x988C      	BCF         LATD4_bit, BitPos(LATD4_bit+0) 
0x003A	0xD001      	BRA         L__lcd_cmd_451
L__lcd_cmd_450:
0x003C	0x888C      	BSF         LATD4_bit, BitPos(LATD4_bit+0) 
L__lcd_cmd_451:
;DZ.c,55 :: 		LCD_D5 = (cmd >> 1) & 1;
0x003E	0xF000C02A  	MOVFF       FARG_lcd_cmd_4_cmd, R0
0x0042	0x3200      	RRCF        R0, 1 
0x0044	0x9E00      	BCF         R0, 7 
0x0046	0x0E01      	MOVLW       1
0x0048	0x1600      	ANDWF       R0, 1 
0x004A	0xB000      	BTFSC       R0, 0 
0x004C	0xD002      	BRA         L__lcd_cmd_452
0x004E	0x9A8C      	BCF         LATD5_bit, BitPos(LATD5_bit+0) 
0x0050	0xD001      	BRA         L__lcd_cmd_453
L__lcd_cmd_452:
0x0052	0x8A8C      	BSF         LATD5_bit, BitPos(LATD5_bit+0) 
L__lcd_cmd_453:
;DZ.c,56 :: 		LCD_D6 = (cmd >> 2) & 1;
0x0054	0xF000C02A  	MOVFF       FARG_lcd_cmd_4_cmd, R0
0x0058	0x3200      	RRCF        R0, 1 
0x005A	0x9E00      	BCF         R0, 7 
0x005C	0x3200      	RRCF        R0, 1 
0x005E	0x9E00      	BCF         R0, 7 
0x0060	0x0E01      	MOVLW       1
0x0062	0x1600      	ANDWF       R0, 1 
0x0064	0xB000      	BTFSC       R0, 0 
0x0066	0xD002      	BRA         L__lcd_cmd_454
0x0068	0x9C8C      	BCF         LATD6_bit, BitPos(LATD6_bit+0) 
0x006A	0xD001      	BRA         L__lcd_cmd_455
L__lcd_cmd_454:
0x006C	0x8C8C      	BSF         LATD6_bit, BitPos(LATD6_bit+0) 
L__lcd_cmd_455:
;DZ.c,57 :: 		LCD_D7 = (cmd >> 3) & 1;
0x006E	0xF000C02A  	MOVFF       FARG_lcd_cmd_4_cmd, R0
0x0072	0x3200      	RRCF        R0, 1 
0x0074	0x9E00      	BCF         R0, 7 
0x0076	0x3200      	RRCF        R0, 1 
0x0078	0x9E00      	BCF         R0, 7 
0x007A	0x3200      	RRCF        R0, 1 
0x007C	0x9E00      	BCF         R0, 7 
0x007E	0x0E01      	MOVLW       1
0x0080	0x1600      	ANDWF       R0, 1 
0x0082	0xB000      	BTFSC       R0, 0 
0x0084	0xD002      	BRA         L__lcd_cmd_456
0x0086	0x9E8C      	BCF         LATD7_bit, BitPos(LATD7_bit+0) 
0x0088	0xD001      	BRA         L__lcd_cmd_457
L__lcd_cmd_456:
0x008A	0x8E8C      	BSF         LATD7_bit, BitPos(LATD7_bit+0) 
L__lcd_cmd_457:
;DZ.c,58 :: 		}
L_end_lcd_cmd_4:
0x008C	0x0012      	RETURN      0
; end of _lcd_cmd_4
_lcd_cmd_my:
;DZ.c,60 :: 		void lcd_cmd_my(unsigned char cmd){
;DZ.c,61 :: 		LCD_RS = 0;
0x008E	0x948A      	BCF         LATB2_bit, BitPos(LATB2_bit+0) 
;DZ.c,62 :: 		lcd_cmd_4(cmd >> 4);
0x0090	0xF02AC029  	MOVFF       FARG_lcd_cmd_my_cmd, FARG_lcd_cmd_4_cmd
0x0094	0x322A      	RRCF        FARG_lcd_cmd_4_cmd, 1 
0x0096	0x9E2A      	BCF         FARG_lcd_cmd_4_cmd, 7 
0x0098	0x322A      	RRCF        FARG_lcd_cmd_4_cmd, 1 
0x009A	0x9E2A      	BCF         FARG_lcd_cmd_4_cmd, 7 
0x009C	0x322A      	RRCF        FARG_lcd_cmd_4_cmd, 1 
0x009E	0x9E2A      	BCF         FARG_lcd_cmd_4_cmd, 7 
0x00A0	0x322A      	RRCF        FARG_lcd_cmd_4_cmd, 1 
0x00A2	0x9E2A      	BCF         FARG_lcd_cmd_4_cmd, 7 
0x00A4	0xDFC4      	RCALL       _lcd_cmd_4
;DZ.c,63 :: 		pulse_e();
0x00A6	0xDFBA      	RCALL       _pulse_e
;DZ.c,64 :: 		lcd_cmd_4(cmd & 0x0F);
0x00A8	0x0E0F      	MOVLW       15
0x00AA	0x1429      	ANDWF       FARG_lcd_cmd_my_cmd, 0 
0x00AC	0x6E2A      	MOVWF       FARG_lcd_cmd_4_cmd 
0x00AE	0xDFBF      	RCALL       _lcd_cmd_4
;DZ.c,65 :: 		pulse_e();
0x00B0	0xDFB5      	RCALL       _pulse_e
;DZ.c,66 :: 		}
L_end_lcd_cmd_my:
0x00B2	0x0012      	RETURN      0
; end of _lcd_cmd_my
_check_rows:
;DZ.c,117 :: 		unsigned char check_rows(){
;DZ.c,118 :: 		unsigned char row_result = 0;
0x00B4	0x6A29      	CLRF        check_rows_row_result_L0 
;DZ.c,120 :: 		if(ROW_0 == 1){
0x00B6	0xA880      	BTFSS       RA4_bit, BitPos(RA4_bit+0) 
0x00B8	0xD005      	BRA         L_check_rows11
;DZ.c,121 :: 		row_result = 0x10;
0x00BA	0x0E10      	MOVLW       16
0x00BC	0x6E29      	MOVWF       check_rows_row_result_L0 
;DZ.c,122 :: 		return row_result;
0x00BE	0x0E10      	MOVLW       16
0x00C0	0x6E00      	MOVWF       R0 
0x00C2	0xD017      	BRA         L_end_check_rows
;DZ.c,123 :: 		}
L_check_rows11:
;DZ.c,124 :: 		if(ROW_1 == 1){
0x00C4	0xAA80      	BTFSS       RA5_bit, BitPos(RA5_bit+0) 
0x00C6	0xD005      	BRA         L_check_rows12
;DZ.c,125 :: 		row_result = 0x11;
0x00C8	0x0E11      	MOVLW       17
0x00CA	0x6E29      	MOVWF       check_rows_row_result_L0 
;DZ.c,126 :: 		return row_result;
0x00CC	0x0E11      	MOVLW       17
0x00CE	0x6E00      	MOVWF       R0 
0x00D0	0xD010      	BRA         L_end_check_rows
;DZ.c,127 :: 		}
L_check_rows12:
;DZ.c,128 :: 		if(ROW_2 == 1){
0x00D2	0xAC80      	BTFSS       RA6_bit, BitPos(RA6_bit+0) 
0x00D4	0xD005      	BRA         L_check_rows13
;DZ.c,129 :: 		row_result = 0x12;
0x00D6	0x0E12      	MOVLW       18
0x00D8	0x6E29      	MOVWF       check_rows_row_result_L0 
;DZ.c,130 :: 		return row_result;
0x00DA	0x0E12      	MOVLW       18
0x00DC	0x6E00      	MOVWF       R0 
0x00DE	0xD009      	BRA         L_end_check_rows
;DZ.c,131 :: 		}
L_check_rows13:
;DZ.c,132 :: 		if(ROW_3 == 1){
0x00E0	0xAE80      	BTFSS       RA7_bit, BitPos(RA7_bit+0) 
0x00E2	0xD005      	BRA         L_check_rows14
;DZ.c,133 :: 		row_result = 0x13;
0x00E4	0x0E13      	MOVLW       19
0x00E6	0x6E29      	MOVWF       check_rows_row_result_L0 
;DZ.c,134 :: 		return row_result;
0x00E8	0x0E13      	MOVLW       19
0x00EA	0x6E00      	MOVWF       R0 
0x00EC	0xD002      	BRA         L_end_check_rows
;DZ.c,135 :: 		}
L_check_rows14:
;DZ.c,136 :: 		return row_result;
0x00EE	0xF000C029  	MOVFF       check_rows_row_result_L0, R0
;DZ.c,137 :: 		}
L_end_check_rows:
0x00F2	0x0012      	RETURN      0
; end of _check_rows
_lcd_init_r:
;DZ.c,86 :: 		void lcd_init_r(){
;DZ.c,88 :: 		lcd_cmd_4(0x03);
0x00F4	0x0E03      	MOVLW       3
0x00F6	0x6E2A      	MOVWF       FARG_lcd_cmd_4_cmd 
0x00F8	0xDF9A      	RCALL       _lcd_cmd_4
;DZ.c,90 :: 		pulse_e();
0x00FA	0xDF90      	RCALL       _pulse_e
;DZ.c,92 :: 		Delay_us(40);
0x00FC	0x0E21      	MOVLW       33
0x00FE	0x6E0D      	MOVWF       R13, 0
L_lcd_init_r9:
0x0100	0x2E0D      	DECFSZ      R13, 1, 0
0x0102	0xD7FE      	BRA         L_lcd_init_r9
;DZ.c,93 :: 		}
L_end_lcd_init_r:
0x0104	0x0012      	RETURN      0
; end of _lcd_init_r
_lcd_init_all:
;DZ.c,95 :: 		void lcd_init_all(){
;DZ.c,97 :: 		Delay_ms(20);
0x0106	0x0E41      	MOVLW       65
0x0108	0x6E0C      	MOVWF       R12, 0
0x010A	0x0EEE      	MOVLW       238
0x010C	0x6E0D      	MOVWF       R13, 0
L_lcd_init_all10:
0x010E	0x2E0D      	DECFSZ      R13, 1, 0
0x0110	0xD7FE      	BRA         L_lcd_init_all10
0x0112	0x2E0C      	DECFSZ      R12, 1, 0
0x0114	0xD7FC      	BRA         L_lcd_init_all10
0x0116	0x0000      	NOP
;DZ.c,99 :: 		lcd_init_r();
0x0118	0xDFED      	RCALL       _lcd_init_r
;DZ.c,101 :: 		lcd_init_r();
0x011A	0xDFEC      	RCALL       _lcd_init_r
;DZ.c,103 :: 		lcd_init_r();
0x011C	0xDFEB      	RCALL       _lcd_init_r
;DZ.c,105 :: 		lcd_cmd_4(0x02);
0x011E	0x0E02      	MOVLW       2
0x0120	0x6E2A      	MOVWF       FARG_lcd_cmd_4_cmd 
0x0122	0xDF85      	RCALL       _lcd_cmd_4
;DZ.c,106 :: 		pulse_e();
0x0124	0xDF7B      	RCALL       _pulse_e
;DZ.c,108 :: 		lcd_cmd_my(0x28);
0x0126	0x0E28      	MOVLW       40
0x0128	0x6E29      	MOVWF       FARG_lcd_cmd_my_cmd 
0x012A	0xDFB1      	RCALL       _lcd_cmd_my
;DZ.c,110 :: 		lcd_cmd_my(0x0C);
0x012C	0x0E0C      	MOVLW       12
0x012E	0x6E29      	MOVWF       FARG_lcd_cmd_my_cmd 
0x0130	0xDFAE      	RCALL       _lcd_cmd_my
;DZ.c,112 :: 		lcd_cmd_my(0x01);
0x0132	0x0E01      	MOVLW       1
0x0134	0x6E29      	MOVWF       FARG_lcd_cmd_my_cmd 
0x0136	0xDFAB      	RCALL       _lcd_cmd_my
;DZ.c,114 :: 		lcd_cmd_my(0x06);
0x0138	0x0E06      	MOVLW       6
0x013A	0x6E29      	MOVWF       FARG_lcd_cmd_my_cmd 
0x013C	0xDFA8      	RCALL       _lcd_cmd_my
;DZ.c,115 :: 		}
L_end_lcd_init_all:
0x013E	0x0012      	RETURN      0
; end of _lcd_init_all
_to_binary:
;DZ.c,37 :: 		void to_binary(unsigned char val, char *buffer) {
;DZ.c,38 :: 		int i = 0;
0x0140	0x6A27      	CLRF        to_binary_i_L0 
0x0142	0x6A28      	CLRF        to_binary_i_L0+1 
;DZ.c,39 :: 		for ( i = 7; i >= 0; i--) {
0x0144	0x0E07      	MOVLW       7
0x0146	0x6E27      	MOVWF       to_binary_i_L0 
0x0148	0x0E00      	MOVLW       0
0x014A	0x6E28      	MOVWF       to_binary_i_L0+1 
L_to_binary0:
0x014C	0x0E80      	MOVLW       128
0x014E	0x1828      	XORWF       to_binary_i_L0+1, 0 
0x0150	0x6E00      	MOVWF       R0 
0x0152	0x0E80      	MOVLW       128
0x0154	0x5C00      	SUBWF       R0, 0 
0x0156	0xE102      	BNZ         L__to_binary45
0x0158	0x0E00      	MOVLW       0
0x015A	0x5C27      	SUBWF       to_binary_i_L0, 0 
L__to_binary45:
0x015C	0xE331      	BNC         L_to_binary1
;DZ.c,40 :: 		buffer[7 - i] = (val & (1 << i)) ? '1' : '0';
0x015E	0x5027      	MOVF        to_binary_i_L0, 0 
0x0160	0x0807      	SUBLW       7
0x0162	0x6E00      	MOVWF       R0 
0x0164	0xF001C028  	MOVFF       to_binary_i_L0+1, R1
0x0168	0x0E00      	MOVLW       0
0x016A	0x5601      	SUBFWB      R1, 1 
0x016C	0x5000      	MOVF        R0, 0 
0x016E	0x2425      	ADDWF       FARG_to_binary_buffer, 0 
0x0170	0x6E03      	MOVWF       R3 
0x0172	0x5001      	MOVF        R1, 0 
0x0174	0x2026      	ADDWFC      FARG_to_binary_buffer+1, 0 
0x0176	0x6E04      	MOVWF       R4 
0x0178	0xF002C027  	MOVFF       to_binary_i_L0, R2
0x017C	0x0E01      	MOVLW       1
0x017E	0x6E00      	MOVWF       R0 
0x0180	0x0E00      	MOVLW       0
0x0182	0x6E01      	MOVWF       R1 
0x0184	0x5002      	MOVF        R2, 0 
L__to_binary46:
0x0186	0xE005      	BZ          L__to_binary47
0x0188	0x3600      	RLCF        R0, 1 
0x018A	0x9000      	BCF         R0, 0 
0x018C	0x3601      	RLCF        R1, 1 
0x018E	0x0FFF      	ADDLW       255
0x0190	0xD7FA      	BRA         L__to_binary46
L__to_binary47:
0x0192	0x5024      	MOVF        FARG_to_binary_val, 0 
0x0194	0x1600      	ANDWF       R0, 1 
0x0196	0x0E00      	MOVLW       0
0x0198	0x1601      	ANDWF       R1, 1 
0x019A	0x5000      	MOVF        R0, 0 
0x019C	0x1001      	IORWF       R1, 0 
0x019E	0xE003      	BZ          L_to_binary3
0x01A0	0x0E31      	MOVLW       49
0x01A2	0x6E05      	MOVWF       R5 
0x01A4	0xD002      	BRA         L_to_binary4
L_to_binary3:
0x01A6	0x0E30      	MOVLW       48
0x01A8	0x6E05      	MOVWF       R5 
L_to_binary4:
0x01AA	0xFFE1C003  	MOVFF       R3, FSR1L
0x01AE	0xFFE2C004  	MOVFF       R4, FSR1H
0x01B2	0xFFE6C005  	MOVFF       R5, POSTINC1
;DZ.c,39 :: 		for ( i = 7; i >= 0; i--) {
0x01B6	0x0E01      	MOVLW       1
0x01B8	0x5E27      	SUBWF       to_binary_i_L0, 1 
0x01BA	0x0E00      	MOVLW       0
0x01BC	0x5A28      	SUBWFB      to_binary_i_L0+1, 1 
;DZ.c,41 :: 		}
0x01BE	0xD7C6      	BRA         L_to_binary0
L_to_binary1:
;DZ.c,42 :: 		buffer[8] = '\0';
0x01C0	0x0E08      	MOVLW       8
0x01C2	0x2425      	ADDWF       FARG_to_binary_buffer, 0 
0x01C4	0x6EE1      	MOVWF       FSR1L 
0x01C6	0x0E00      	MOVLW       0
0x01C8	0x2026      	ADDWFC      FARG_to_binary_buffer+1, 0 
0x01CA	0x6EE2      	MOVWF       FSR1L+1 
0x01CC	0x6AE6      	CLRF        POSTINC1 
;DZ.c,43 :: 		}
L_end_to_binary:
0x01CE	0x0012      	RETURN      0
; end of _to_binary
_check_keyboard:
;DZ.c,139 :: 		unsigned char check_keyboard(){
;DZ.c,140 :: 		unsigned char keyboard_result = 0;
0x01D0	0x6A24      	CLRF        check_keyboard_keyboard_result_L0 
0x01D2	0x6A25      	CLRF        check_keyboard_row_result_L0 
;DZ.c,144 :: 		COL_0 = 1;
0x01D4	0x8089      	BSF         LATA0_bit, BitPos(LATA0_bit+0) 
;DZ.c,145 :: 		row_result =  check_rows();
0x01D6	0xDF6E      	RCALL       _check_rows
0x01D8	0xF025C000  	MOVFF       R0, check_keyboard_row_result_L0
;DZ.c,146 :: 		if(row_result !=0){
0x01DC	0x5000      	MOVF        R0, 0 
0x01DE	0x0A00      	XORLW       0
0x01E0	0xE011      	BZ          L_check_keyboard15
;DZ.c,147 :: 		row_result = row_result & 0x00FF;
0x01E2	0x0EFF      	MOVLW       255
0x01E4	0x1625      	ANDWF       check_keyboard_row_result_L0, 1 
;DZ.c,148 :: 		Delay_ms(20);
0x01E6	0x0E41      	MOVLW       65
0x01E8	0x6E0C      	MOVWF       R12, 0
0x01EA	0x0EEE      	MOVLW       238
0x01EC	0x6E0D      	MOVWF       R13, 0
L_check_keyboard16:
0x01EE	0x2E0D      	DECFSZ      R13, 1, 0
0x01F0	0xD7FE      	BRA         L_check_keyboard16
0x01F2	0x2E0C      	DECFSZ      R12, 1, 0
0x01F4	0xD7FC      	BRA         L_check_keyboard16
0x01F6	0x0000      	NOP
;DZ.c,149 :: 		keyboard_result = 0x10+row_result;
0x01F8	0x5025      	MOVF        check_keyboard_row_result_L0, 0 
0x01FA	0x0F10      	ADDLW       16
0x01FC	0x6E00      	MOVWF       R0 
0x01FE	0xF024C000  	MOVFF       R0, check_keyboard_keyboard_result_L0
;DZ.c,150 :: 		return keyboard_result;
0x0202	0xD04E      	BRA         L_end_check_keyboard
;DZ.c,151 :: 		}
L_check_keyboard15:
;DZ.c,152 :: 		COL_0 = 0;
0x0204	0x9089      	BCF         LATA0_bit, BitPos(LATA0_bit+0) 
;DZ.c,154 :: 		COL_1 = 1;
0x0206	0x8289      	BSF         LATA1_bit, BitPos(LATA1_bit+0) 
;DZ.c,155 :: 		row_result =  check_rows();
0x0208	0xDF55      	RCALL       _check_rows
0x020A	0xF025C000  	MOVFF       R0, check_keyboard_row_result_L0
;DZ.c,156 :: 		if(row_result !=0){
0x020E	0x5000      	MOVF        R0, 0 
0x0210	0x0A00      	XORLW       0
0x0212	0xE011      	BZ          L_check_keyboard17
;DZ.c,157 :: 		row_result = row_result & 0x00FF;
0x0214	0x0EFF      	MOVLW       255
0x0216	0x1625      	ANDWF       check_keyboard_row_result_L0, 1 
;DZ.c,158 :: 		Delay_ms(20);
0x0218	0x0E41      	MOVLW       65
0x021A	0x6E0C      	MOVWF       R12, 0
0x021C	0x0EEE      	MOVLW       238
0x021E	0x6E0D      	MOVWF       R13, 0
L_check_keyboard18:
0x0220	0x2E0D      	DECFSZ      R13, 1, 0
0x0222	0xD7FE      	BRA         L_check_keyboard18
0x0224	0x2E0C      	DECFSZ      R12, 1, 0
0x0226	0xD7FC      	BRA         L_check_keyboard18
0x0228	0x0000      	NOP
;DZ.c,159 :: 		keyboard_result = 0x14+row_result;
0x022A	0x5025      	MOVF        check_keyboard_row_result_L0, 0 
0x022C	0x0F14      	ADDLW       20
0x022E	0x6E00      	MOVWF       R0 
0x0230	0xF024C000  	MOVFF       R0, check_keyboard_keyboard_result_L0
;DZ.c,160 :: 		return keyboard_result;
0x0234	0xD035      	BRA         L_end_check_keyboard
;DZ.c,161 :: 		}
L_check_keyboard17:
;DZ.c,162 :: 		COL_1 = 0;
0x0236	0x9289      	BCF         LATA1_bit, BitPos(LATA1_bit+0) 
;DZ.c,164 :: 		COL_2 = 1;
0x0238	0x8489      	BSF         LATA2_bit, BitPos(LATA2_bit+0) 
;DZ.c,165 :: 		row_result =  check_rows();
0x023A	0xDF3C      	RCALL       _check_rows
0x023C	0xF025C000  	MOVFF       R0, check_keyboard_row_result_L0
;DZ.c,166 :: 		if(row_result !=0){
0x0240	0x5000      	MOVF        R0, 0 
0x0242	0x0A00      	XORLW       0
0x0244	0xE011      	BZ          L_check_keyboard19
;DZ.c,167 :: 		row_result = row_result & 0x00FF;
0x0246	0x0EFF      	MOVLW       255
0x0248	0x1625      	ANDWF       check_keyboard_row_result_L0, 1 
;DZ.c,168 :: 		Delay_ms(20);
0x024A	0x0E41      	MOVLW       65
0x024C	0x6E0C      	MOVWF       R12, 0
0x024E	0x0EEE      	MOVLW       238
0x0250	0x6E0D      	MOVWF       R13, 0
L_check_keyboard20:
0x0252	0x2E0D      	DECFSZ      R13, 1, 0
0x0254	0xD7FE      	BRA         L_check_keyboard20
0x0256	0x2E0C      	DECFSZ      R12, 1, 0
0x0258	0xD7FC      	BRA         L_check_keyboard20
0x025A	0x0000      	NOP
;DZ.c,169 :: 		keyboard_result = 0x18+row_result;
0x025C	0x5025      	MOVF        check_keyboard_row_result_L0, 0 
0x025E	0x0F18      	ADDLW       24
0x0260	0x6E00      	MOVWF       R0 
0x0262	0xF024C000  	MOVFF       R0, check_keyboard_keyboard_result_L0
;DZ.c,170 :: 		return keyboard_result;
0x0266	0xD01C      	BRA         L_end_check_keyboard
;DZ.c,171 :: 		}
L_check_keyboard19:
;DZ.c,172 :: 		COL_2 = 0;
0x0268	0x9489      	BCF         LATA2_bit, BitPos(LATA2_bit+0) 
;DZ.c,174 :: 		COL_3 = 1;
0x026A	0x8689      	BSF         LATA3_bit, BitPos(LATA3_bit+0) 
;DZ.c,175 :: 		row_result =  check_rows();
0x026C	0xDF23      	RCALL       _check_rows
0x026E	0xF025C000  	MOVFF       R0, check_keyboard_row_result_L0
;DZ.c,176 :: 		if(row_result !=0){
0x0272	0x5000      	MOVF        R0, 0 
0x0274	0x0A00      	XORLW       0
0x0276	0xE011      	BZ          L_check_keyboard21
;DZ.c,177 :: 		row_result = row_result & 0x00FF;
0x0278	0x0EFF      	MOVLW       255
0x027A	0x1625      	ANDWF       check_keyboard_row_result_L0, 1 
;DZ.c,178 :: 		Delay_ms(20);
0x027C	0x0E41      	MOVLW       65
0x027E	0x6E0C      	MOVWF       R12, 0
0x0280	0x0EEE      	MOVLW       238
0x0282	0x6E0D      	MOVWF       R13, 0
L_check_keyboard22:
0x0284	0x2E0D      	DECFSZ      R13, 1, 0
0x0286	0xD7FE      	BRA         L_check_keyboard22
0x0288	0x2E0C      	DECFSZ      R12, 1, 0
0x028A	0xD7FC      	BRA         L_check_keyboard22
0x028C	0x0000      	NOP
;DZ.c,179 :: 		keyboard_result = 0x1C+row_result;
0x028E	0x5025      	MOVF        check_keyboard_row_result_L0, 0 
0x0290	0x0F1C      	ADDLW       28
0x0292	0x6E00      	MOVWF       R0 
0x0294	0xF024C000  	MOVFF       R0, check_keyboard_keyboard_result_L0
;DZ.c,180 :: 		return keyboard_result;
0x0298	0xD003      	BRA         L_end_check_keyboard
;DZ.c,181 :: 		}
L_check_keyboard21:
;DZ.c,182 :: 		COL_3 = 0;
0x029A	0x9689      	BCF         LATA3_bit, BitPos(LATA3_bit+0) 
;DZ.c,184 :: 		return keyboard_result;
0x029C	0xF000C024  	MOVFF       check_keyboard_keyboard_result_L0, R0
;DZ.c,185 :: 		}
L_end_check_keyboard:
0x02A0	0x0012      	RETURN      0
; end of _check_keyboard
_lcd_char_my:
;DZ.c,68 :: 		void lcd_char_my(unsigned char row, unsigned char column, unsigned char cmd){
;DZ.c,72 :: 		if (row == 1)
0x02A2	0x5024      	MOVF        FARG_lcd_char_my_row, 0 
0x02A4	0x0A01      	XORLW       1
0x02A6	0xE106      	BNZ         L_lcd_char_my6
;DZ.c,73 :: 		adress = 0x80 + (column - 1);
0x02A8	0x0425      	DECF        FARG_lcd_char_my_column, 0 
0x02AA	0x6E00      	MOVWF       R0 
0x02AC	0x5000      	MOVF        R0, 0 
0x02AE	0x0F80      	ADDLW       128
0x02B0	0x6E27      	MOVWF       lcd_char_my_adress_L0 
0x02B2	0xD008      	BRA         L_lcd_char_my7
L_lcd_char_my6:
;DZ.c,74 :: 		else if (row == 2)
0x02B4	0x5024      	MOVF        FARG_lcd_char_my_row, 0 
0x02B6	0x0A02      	XORLW       2
0x02B8	0xE105      	BNZ         L_lcd_char_my8
;DZ.c,75 :: 		adress = 0xC0 + (column - 1);
0x02BA	0x0425      	DECF        FARG_lcd_char_my_column, 0 
0x02BC	0x6E00      	MOVWF       R0 
0x02BE	0x5000      	MOVF        R0, 0 
0x02C0	0x0FC0      	ADDLW       192
0x02C2	0x6E27      	MOVWF       lcd_char_my_adress_L0 
L_lcd_char_my8:
L_lcd_char_my7:
;DZ.c,77 :: 		lcd_cmd_my(adress);
0x02C4	0xF029C027  	MOVFF       lcd_char_my_adress_L0, FARG_lcd_cmd_my_cmd
0x02C8	0xDEE2      	RCALL       _lcd_cmd_my
;DZ.c,79 :: 		LCD_RS = 1;
0x02CA	0x848A      	BSF         LATB2_bit, BitPos(LATB2_bit+0) 
;DZ.c,80 :: 		lcd_cmd_4(cmd >> 4);
0x02CC	0xF02AC026  	MOVFF       FARG_lcd_char_my_cmd, FARG_lcd_cmd_4_cmd
0x02D0	0x322A      	RRCF        FARG_lcd_cmd_4_cmd, 1 
0x02D2	0x9E2A      	BCF         FARG_lcd_cmd_4_cmd, 7 
0x02D4	0x322A      	RRCF        FARG_lcd_cmd_4_cmd, 1 
0x02D6	0x9E2A      	BCF         FARG_lcd_cmd_4_cmd, 7 
0x02D8	0x322A      	RRCF        FARG_lcd_cmd_4_cmd, 1 
0x02DA	0x9E2A      	BCF         FARG_lcd_cmd_4_cmd, 7 
0x02DC	0x322A      	RRCF        FARG_lcd_cmd_4_cmd, 1 
0x02DE	0x9E2A      	BCF         FARG_lcd_cmd_4_cmd, 7 
0x02E0	0xDEA6      	RCALL       _lcd_cmd_4
;DZ.c,81 :: 		pulse_e();
0x02E2	0xDE9C      	RCALL       _pulse_e
;DZ.c,82 :: 		lcd_cmd_4(cmd & 0x0F);
0x02E4	0x0E0F      	MOVLW       15
0x02E6	0x1426      	ANDWF       FARG_lcd_char_my_cmd, 0 
0x02E8	0x6E2A      	MOVWF       FARG_lcd_cmd_4_cmd 
0x02EA	0xDEA1      	RCALL       _lcd_cmd_4
;DZ.c,83 :: 		pulse_e();
0x02EC	0xDE97      	RCALL       _pulse_e
;DZ.c,84 :: 		}
L_end_lcd_char_my:
0x02EE	0x0012      	RETURN      0
; end of _lcd_char_my
_main:
;DZ.c,187 :: 		void main() {
;DZ.c,188 :: 		unsigned char count = 0;
0x02F0	0x6A1E      	CLRF        main_count_L0 
0x02F2	0x6A1F      	CLRF        main_i_L0 
0x02F4	0x0E01      	MOVLW       1
0x02F6	0x6E20      	MOVWF       main_j_L0 
0x02F8	0x6A21      	CLRF        main_k_L0 
0x02FA	0x6A22      	CLRF        main_input_value_L0 
0x02FC	0x6A23      	CLRF        main_keyboard_result_L0 
;DZ.c,196 :: 		ADCON1 = 0x0F;
0x02FE	0x0E0F      	MOVLW       15
0x0300	0x6EC1      	MOVWF       ADCON1 
;DZ.c,198 :: 		LCD_RS_Direction =0;
0x0302	0x9493      	BCF         TRISB2_bit, BitPos(TRISB2_bit+0) 
;DZ.c,199 :: 		LCD_EN_Direction =0;
0x0304	0x9A93      	BCF         TRISB5_bit, BitPos(TRISB5_bit+0) 
;DZ.c,200 :: 		LCD_D4_Direction =0;
0x0306	0x9895      	BCF         TRISD4_bit, BitPos(TRISD4_bit+0) 
;DZ.c,201 :: 		LCD_D5_Direction =0;
0x0308	0x9A95      	BCF         TRISD5_bit, BitPos(TRISD5_bit+0) 
;DZ.c,202 :: 		LCD_D6_Direction =0;
0x030A	0x9C95      	BCF         TRISD6_bit, BitPos(TRISD6_bit+0) 
;DZ.c,203 :: 		LCD_D7_Direction =0;
0x030C	0x9E95      	BCF         TRISD7_bit, BitPos(TRISD7_bit+0) 
;DZ.c,205 :: 		COL_0_Direction =0;
0x030E	0x9092      	BCF         TRISA0_bit, BitPos(TRISA0_bit+0) 
;DZ.c,206 :: 		COL_1_Direction =0;
0x0310	0x9292      	BCF         TRISA1_bit, BitPos(TRISA1_bit+0) 
;DZ.c,207 :: 		COL_2_Direction =0;
0x0312	0x9492      	BCF         TRISA2_bit, BitPos(TRISA2_bit+0) 
;DZ.c,208 :: 		COL_3_Direction =0;
0x0314	0x9692      	BCF         TRISA3_bit, BitPos(TRISA3_bit+0) 
;DZ.c,210 :: 		ROW_0_Direction =1;
0x0316	0x8892      	BSF         TRISA4_bit, BitPos(TRISA4_bit+0) 
;DZ.c,211 :: 		ROW_1_Direction =1;
0x0318	0x8A92      	BSF         TRISA5_bit, BitPos(TRISA5_bit+0) 
;DZ.c,212 :: 		ROW_2_Direction =1;
0x031A	0x8C92      	BSF         TRISA6_bit, BitPos(TRISA6_bit+0) 
;DZ.c,213 :: 		ROW_3_Direction =1;
0x031C	0x8E92      	BSF         TRISA7_bit, BitPos(TRISA7_bit+0) 
;DZ.c,215 :: 		lcd_init_all();
0x031E	0xDEF3      	RCALL       _lcd_init_all
;DZ.c,217 :: 		Delay_ms(10);
0x0320	0x0E21      	MOVLW       33
0x0322	0x6E0C      	MOVWF       R12, 0
0x0324	0x0E76      	MOVLW       118
0x0326	0x6E0D      	MOVWF       R13, 0
L_main23:
0x0328	0x2E0D      	DECFSZ      R13, 1, 0
0x032A	0xD7FE      	BRA         L_main23
0x032C	0x2E0C      	DECFSZ      R12, 1, 0
0x032E	0xD7FC      	BRA         L_main23
0x0330	0x0000      	NOP
;DZ.c,219 :: 		lcd_char_my(1,j,'S');
0x0332	0x0E01      	MOVLW       1
0x0334	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x0336	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x033A	0x0E53      	MOVLW       83
0x033C	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x033E	0xDFB1      	RCALL       _lcd_char_my
;DZ.c,220 :: 		j++;
0x0340	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,221 :: 		lcd_char_my(1,j,'E');
0x0342	0x0E01      	MOVLW       1
0x0344	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x0346	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x034A	0x0E45      	MOVLW       69
0x034C	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x034E	0xDFA9      	RCALL       _lcd_char_my
;DZ.c,222 :: 		j++;
0x0350	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,223 :: 		lcd_char_my(1,j,'T');
0x0352	0x0E01      	MOVLW       1
0x0354	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x0356	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x035A	0x0E54      	MOVLW       84
0x035C	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x035E	0xDFA1      	RCALL       _lcd_char_my
;DZ.c,224 :: 		j++;
0x0360	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,225 :: 		lcd_char_my(1,j,':');
0x0362	0x0E01      	MOVLW       1
0x0364	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x0366	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x036A	0x0E3A      	MOVLW       58
0x036C	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x036E	0xDF99      	RCALL       _lcd_char_my
;DZ.c,226 :: 		j++;
0x0370	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,227 :: 		j++;
0x0372	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,229 :: 		j=1;
0x0374	0x0E01      	MOVLW       1
0x0376	0x6E20      	MOVWF       main_j_L0 
;DZ.c,231 :: 		while (keyboard_result !=0x12) {
L_main24:
0x0378	0x5023      	MOVF        main_keyboard_result_L0, 0 
0x037A	0x0A12      	XORLW       18
0x037C	0xB4D8      	BTFSC       STATUS, 2 
0x037E	0xD0AF      	BRA         L_main25
;DZ.c,232 :: 		lcd_char_my(1, 6, k);
0x0380	0x0E01      	MOVLW       1
0x0382	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x0384	0x0E06      	MOVLW       6
0x0386	0x6E25      	MOVWF       FARG_lcd_char_my_column 
0x0388	0xF026C021  	MOVFF       main_k_L0, FARG_lcd_char_my_cmd
0x038C	0xDF8A      	RCALL       _lcd_char_my
;DZ.c,233 :: 		k++;
0x038E	0x2A21      	INCF        main_k_L0, 1 
;DZ.c,235 :: 		keyboard_result = check_keyboard();
0x0390	0xDF1F      	RCALL       _check_keyboard
0x0392	0xF023C000  	MOVFF       R0, main_keyboard_result_L0
;DZ.c,237 :: 		if (keyboard_result == 0x10) {
0x0396	0x5000      	MOVF        R0, 0 
0x0398	0x0A10      	XORLW       16
0x039A	0xE110      	BNZ         L_main26
;DZ.c,238 :: 		Delay_ms(200);
0x039C	0x0E03      	MOVLW       3
0x039E	0x6E0B      	MOVWF       R11, 0
0x03A0	0x0E8A      	MOVLW       138
0x03A2	0x6E0C      	MOVWF       R12, 0
0x03A4	0x0E55      	MOVLW       85
0x03A6	0x6E0D      	MOVWF       R13, 0
L_main27:
0x03A8	0x2E0D      	DECFSZ      R13, 1, 0
0x03AA	0xD7FE      	BRA         L_main27
0x03AC	0x2E0C      	DECFSZ      R12, 1, 0
0x03AE	0xD7FC      	BRA         L_main27
0x03B0	0x2E0B      	DECFSZ      R11, 1, 0
0x03B2	0xD7FA      	BRA         L_main27
0x03B4	0x0000      	NOP
0x03B6	0x0000      	NOP
;DZ.c,239 :: 		input_value <<= 1;
0x03B8	0x3622      	RLCF        main_input_value_L0, 1 
0x03BA	0x9022      	BCF         main_input_value_L0, 0 
;DZ.c,240 :: 		}
L_main26:
;DZ.c,241 :: 		if (keyboard_result == 0x11) {
0x03BC	0x5023      	MOVF        main_keyboard_result_L0, 0 
0x03BE	0x0A11      	XORLW       17
0x03C0	0xE111      	BNZ         L_main28
;DZ.c,242 :: 		Delay_ms(200);
0x03C2	0x0E03      	MOVLW       3
0x03C4	0x6E0B      	MOVWF       R11, 0
0x03C6	0x0E8A      	MOVLW       138
0x03C8	0x6E0C      	MOVWF       R12, 0
0x03CA	0x0E55      	MOVLW       85
0x03CC	0x6E0D      	MOVWF       R13, 0
L_main29:
0x03CE	0x2E0D      	DECFSZ      R13, 1, 0
0x03D0	0xD7FE      	BRA         L_main29
0x03D2	0x2E0C      	DECFSZ      R12, 1, 0
0x03D4	0xD7FC      	BRA         L_main29
0x03D6	0x2E0B      	DECFSZ      R11, 1, 0
0x03D8	0xD7FA      	BRA         L_main29
0x03DA	0x0000      	NOP
0x03DC	0x0000      	NOP
;DZ.c,243 :: 		input_value = (input_value << 1) | 1;
0x03DE	0x3622      	RLCF        main_input_value_L0, 1 
0x03E0	0x9022      	BCF         main_input_value_L0, 0 
0x03E2	0x8022      	BSF         main_input_value_L0, 0 
;DZ.c,244 :: 		}
L_main28:
;DZ.c,245 :: 		if (keyboard_result == 0x12) {
0x03E4	0x5023      	MOVF        main_keyboard_result_L0, 0 
0x03E6	0x0A12      	XORLW       18
0x03E8	0xE15C      	BNZ         L_main30
;DZ.c,246 :: 		Delay_ms(200);
0x03EA	0x0E03      	MOVLW       3
0x03EC	0x6E0B      	MOVWF       R11, 0
0x03EE	0x0E8A      	MOVLW       138
0x03F0	0x6E0C      	MOVWF       R12, 0
0x03F2	0x0E55      	MOVLW       85
0x03F4	0x6E0D      	MOVWF       R13, 0
L_main31:
0x03F6	0x2E0D      	DECFSZ      R13, 1, 0
0x03F8	0xD7FE      	BRA         L_main31
0x03FA	0x2E0C      	DECFSZ      R12, 1, 0
0x03FC	0xD7FC      	BRA         L_main31
0x03FE	0x2E0B      	DECFSZ      R11, 1, 0
0x0400	0xD7FA      	BRA         L_main31
0x0402	0x0000      	NOP
0x0404	0x0000      	NOP
;DZ.c,247 :: 		count = input_value;
0x0406	0xF01EC022  	MOVFF       main_input_value_L0, main_count_L0
;DZ.c,248 :: 		lcd_char_my(1, j, 'S');
0x040A	0x0E01      	MOVLW       1
0x040C	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x040E	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x0412	0x0E53      	MOVLW       83
0x0414	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x0416	0xDF45      	RCALL       _lcd_char_my
;DZ.c,249 :: 		j++;
0x0418	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,250 :: 		lcd_char_my(1, j, 'T');
0x041A	0x0E01      	MOVLW       1
0x041C	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x041E	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x0422	0x0E54      	MOVLW       84
0x0424	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x0426	0xDF3D      	RCALL       _lcd_char_my
;DZ.c,251 :: 		j++;
0x0428	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,252 :: 		lcd_char_my(1, j, 'A');
0x042A	0x0E01      	MOVLW       1
0x042C	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x042E	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x0432	0x0E41      	MOVLW       65
0x0434	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x0436	0xDF35      	RCALL       _lcd_char_my
;DZ.c,253 :: 		j++;
0x0438	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,254 :: 		lcd_char_my(1, j, 'R');
0x043A	0x0E01      	MOVLW       1
0x043C	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x043E	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x0442	0x0E52      	MOVLW       82
0x0444	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x0446	0xDF2D      	RCALL       _lcd_char_my
;DZ.c,255 :: 		j++;
0x0448	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,256 :: 		lcd_char_my(1, j, 'T');
0x044A	0x0E01      	MOVLW       1
0x044C	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x044E	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x0452	0x0E54      	MOVLW       84
0x0454	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x0456	0xDF25      	RCALL       _lcd_char_my
;DZ.c,257 :: 		j++;
0x0458	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,258 :: 		lcd_char_my(1, j, 'I');
0x045A	0x0E01      	MOVLW       1
0x045C	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x045E	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x0462	0x0E49      	MOVLW       73
0x0464	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x0466	0xDF1D      	RCALL       _lcd_char_my
;DZ.c,259 :: 		j++;
0x0468	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,260 :: 		lcd_char_my(1, j, 'N');
0x046A	0x0E01      	MOVLW       1
0x046C	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x046E	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x0472	0x0E4E      	MOVLW       78
0x0474	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x0476	0xDF15      	RCALL       _lcd_char_my
;DZ.c,261 :: 		j++;
0x0478	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,262 :: 		lcd_char_my(1, j, 'G');
0x047A	0x0E01      	MOVLW       1
0x047C	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x047E	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x0482	0x0E47      	MOVLW       71
0x0484	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x0486	0xDF0D      	RCALL       _lcd_char_my
;DZ.c,263 :: 		Delay_ms(2000);
0x0488	0x0E1A      	MOVLW       26
0x048A	0x6E0B      	MOVWF       R11, 0
0x048C	0x0E5E      	MOVLW       94
0x048E	0x6E0C      	MOVWF       R12, 0
0x0490	0x0E6E      	MOVLW       110
0x0492	0x6E0D      	MOVWF       R13, 0
L_main32:
0x0494	0x2E0D      	DECFSZ      R13, 1, 0
0x0496	0xD7FE      	BRA         L_main32
0x0498	0x2E0C      	DECFSZ      R12, 1, 0
0x049A	0xD7FC      	BRA         L_main32
0x049C	0x2E0B      	DECFSZ      R11, 1, 0
0x049E	0xD7FA      	BRA         L_main32
0x04A0	0x0000      	NOP
;DZ.c,264 :: 		}
L_main30:
;DZ.c,266 :: 		to_binary(input_value, bin_str);
0x04A2	0xF024C022  	MOVFF       main_input_value_L0, FARG_to_binary_val
0x04A6	0x0E15      	MOVLW       main_bin_str_L0
0x04A8	0x6E25      	MOVWF       FARG_to_binary_buffer 
0x04AA	0x0E00      	MOVLW       hi_addr(main_bin_str_L0)
0x04AC	0x6E26      	MOVWF       FARG_to_binary_buffer+1 
0x04AE	0xDE48      	RCALL       _to_binary
;DZ.c,267 :: 		for (i = 0; i < 8; i++) {
0x04B0	0x6A1F      	CLRF        main_i_L0 
L_main33:
0x04B2	0x0E08      	MOVLW       8
0x04B4	0x5C1F      	SUBWF       main_i_L0, 0 
0x04B6	0xE212      	BC          L_main34
;DZ.c,268 :: 		lcd_char_my(2, i + 1, bin_str[i]);
0x04B8	0x0E02      	MOVLW       2
0x04BA	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x04BC	0x501F      	MOVF        main_i_L0, 0 
0x04BE	0x0F01      	ADDLW       1
0x04C0	0x6E25      	MOVWF       FARG_lcd_char_my_column 
0x04C2	0x0E15      	MOVLW       main_bin_str_L0
0x04C4	0x6EE9      	MOVWF       FSR0L 
0x04C6	0x0E00      	MOVLW       hi_addr(main_bin_str_L0)
0x04C8	0x6EEA      	MOVWF       FSR0L+1 
0x04CA	0x501F      	MOVF        main_i_L0, 0 
0x04CC	0x26E9      	ADDWF       FSR0L, 1 
0x04CE	0xB0D8      	BTFSC       STATUS, 0 
0x04D0	0x2AEA      	INCF        FSR0L+1, 1 
0x04D2	0xF026CFEE  	MOVFF       POSTINC0, FARG_lcd_char_my_cmd
0x04D6	0xDEE5      	RCALL       _lcd_char_my
;DZ.c,267 :: 		for (i = 0; i < 8; i++) {
0x04D8	0x2A1F      	INCF        main_i_L0, 1 
;DZ.c,269 :: 		}
0x04DA	0xD7EB      	BRA         L_main33
L_main34:
;DZ.c,270 :: 		}
0x04DC	0xD74D      	BRA         L_main24
L_main25:
;DZ.c,272 :: 		count = input_value;
0x04DE	0xF01EC022  	MOVFF       main_input_value_L0, main_count_L0
;DZ.c,274 :: 		lcd_cmd_my(0x01);
0x04E2	0x0E01      	MOVLW       1
0x04E4	0x6E29      	MOVWF       FARG_lcd_cmd_my_cmd 
0x04E6	0xDDD3      	RCALL       _lcd_cmd_my
;DZ.c,276 :: 		Delay_ms(100);
0x04E8	0x0E02      	MOVLW       2
0x04EA	0x6E0B      	MOVWF       R11, 0
0x04EC	0x0E45      	MOVLW       69
0x04EE	0x6E0C      	MOVWF       R12, 0
0x04F0	0x0EA9      	MOVLW       169
0x04F2	0x6E0D      	MOVWF       R13, 0
L_main36:
0x04F4	0x2E0D      	DECFSZ      R13, 1, 0
0x04F6	0xD7FE      	BRA         L_main36
0x04F8	0x2E0C      	DECFSZ      R12, 1, 0
0x04FA	0xD7FC      	BRA         L_main36
0x04FC	0x2E0B      	DECFSZ      R11, 1, 0
0x04FE	0xD7FA      	BRA         L_main36
0x0500	0x0000      	NOP
0x0502	0x0000      	NOP
;DZ.c,278 :: 		j = 1;
0x0504	0x0E01      	MOVLW       1
0x0506	0x6E20      	MOVWF       main_j_L0 
;DZ.c,279 :: 		lcd_char_my(1, j, 'B');
0x0508	0x0E01      	MOVLW       1
0x050A	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x050C	0x0E01      	MOVLW       1
0x050E	0x6E25      	MOVWF       FARG_lcd_char_my_column 
0x0510	0x0E42      	MOVLW       66
0x0512	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x0514	0xDEC6      	RCALL       _lcd_char_my
;DZ.c,280 :: 		j++;
0x0516	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,281 :: 		lcd_char_my(1, j, 'I');
0x0518	0x0E01      	MOVLW       1
0x051A	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x051C	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x0520	0x0E49      	MOVLW       73
0x0522	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x0524	0xDEBE      	RCALL       _lcd_char_my
;DZ.c,282 :: 		j++;
0x0526	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,283 :: 		lcd_char_my(1, j, 'N');
0x0528	0x0E01      	MOVLW       1
0x052A	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x052C	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x0530	0x0E4E      	MOVLW       78
0x0532	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x0534	0xDEB6      	RCALL       _lcd_char_my
;DZ.c,284 :: 		j++;
0x0536	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,285 :: 		j++;
0x0538	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,286 :: 		lcd_char_my(1, j, 'C');
0x053A	0x0E01      	MOVLW       1
0x053C	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x053E	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x0542	0x0E43      	MOVLW       67
0x0544	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x0546	0xDEAD      	RCALL       _lcd_char_my
;DZ.c,287 :: 		j++;
0x0548	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,288 :: 		lcd_char_my(1, j, 'O');
0x054A	0x0E01      	MOVLW       1
0x054C	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x054E	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x0552	0x0E4F      	MOVLW       79
0x0554	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x0556	0xDEA5      	RCALL       _lcd_char_my
;DZ.c,289 :: 		j++;
0x0558	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,290 :: 		lcd_char_my(1, j, 'U');
0x055A	0x0E01      	MOVLW       1
0x055C	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x055E	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x0562	0x0E55      	MOVLW       85
0x0564	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x0566	0xDE9D      	RCALL       _lcd_char_my
;DZ.c,291 :: 		j++;
0x0568	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,292 :: 		lcd_char_my(1, j, 'N');
0x056A	0x0E01      	MOVLW       1
0x056C	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x056E	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x0572	0x0E4E      	MOVLW       78
0x0574	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x0576	0xDE95      	RCALL       _lcd_char_my
;DZ.c,293 :: 		j++;
0x0578	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,294 :: 		lcd_char_my(1, j, 'T');
0x057A	0x0E01      	MOVLW       1
0x057C	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x057E	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x0582	0x0E54      	MOVLW       84
0x0584	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x0586	0xDE8D      	RCALL       _lcd_char_my
;DZ.c,295 :: 		j++;
0x0588	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,296 :: 		lcd_char_my(1, j, 'E');
0x058A	0x0E01      	MOVLW       1
0x058C	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x058E	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x0592	0x0E45      	MOVLW       69
0x0594	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x0596	0xDE85      	RCALL       _lcd_char_my
;DZ.c,297 :: 		j++;
0x0598	0x2A20      	INCF        main_j_L0, 1 
;DZ.c,298 :: 		lcd_char_my(1, j, 'R');
0x059A	0x0E01      	MOVLW       1
0x059C	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x059E	0xF025C020  	MOVFF       main_j_L0, FARG_lcd_char_my_column
0x05A2	0x0E52      	MOVLW       82
0x05A4	0x6E26      	MOVWF       FARG_lcd_char_my_cmd 
0x05A6	0xDE7D      	RCALL       _lcd_char_my
;DZ.c,300 :: 		while (1) {
L_main37:
;DZ.c,301 :: 		Delay_ms(1000);
0x05A8	0x0E0D      	MOVLW       13
0x05AA	0x6E0B      	MOVWF       R11, 0
0x05AC	0x0EAF      	MOVLW       175
0x05AE	0x6E0C      	MOVWF       R12, 0
0x05B0	0x0EB6      	MOVLW       182
0x05B2	0x6E0D      	MOVWF       R13, 0
L_main39:
0x05B4	0x2E0D      	DECFSZ      R13, 1, 0
0x05B6	0xD7FE      	BRA         L_main39
0x05B8	0x2E0C      	DECFSZ      R12, 1, 0
0x05BA	0xD7FC      	BRA         L_main39
0x05BC	0x2E0B      	DECFSZ      R11, 1, 0
0x05BE	0xD7FA      	BRA         L_main39
0x05C0	0x0000      	NOP
;DZ.c,302 :: 		count++;
0x05C2	0x2A1E      	INCF        main_count_L0, 1 
;DZ.c,303 :: 		if (count > 255) count = 0;
0x05C4	0x501E      	MOVF        main_count_L0, 0 
0x05C6	0x08FF      	SUBLW       255
0x05C8	0xA0D8      	BTFSS       STATUS, 0 
0x05CA	0x6A1E      	CLRF        main_count_L0 
L_main40:
;DZ.c,305 :: 		to_binary(count, bin_str);
0x05CC	0xF024C01E  	MOVFF       main_count_L0, FARG_to_binary_val
0x05D0	0x0E15      	MOVLW       main_bin_str_L0
0x05D2	0x6E25      	MOVWF       FARG_to_binary_buffer 
0x05D4	0x0E00      	MOVLW       hi_addr(main_bin_str_L0)
0x05D6	0x6E26      	MOVWF       FARG_to_binary_buffer+1 
0x05D8	0xDDB3      	RCALL       _to_binary
;DZ.c,307 :: 		for (i = 0; i < 8; i++) {
0x05DA	0x6A1F      	CLRF        main_i_L0 
L_main41:
0x05DC	0x0E08      	MOVLW       8
0x05DE	0x5C1F      	SUBWF       main_i_L0, 0 
0x05E0	0xE212      	BC          L_main42
;DZ.c,308 :: 		lcd_char_my(2, i + 2, bin_str[i]);
0x05E2	0x0E02      	MOVLW       2
0x05E4	0x6E24      	MOVWF       FARG_lcd_char_my_row 
0x05E6	0x0E02      	MOVLW       2
0x05E8	0x241F      	ADDWF       main_i_L0, 0 
0x05EA	0x6E25      	MOVWF       FARG_lcd_char_my_column 
0x05EC	0x0E15      	MOVLW       main_bin_str_L0
0x05EE	0x6EE9      	MOVWF       FSR0L 
0x05F0	0x0E00      	MOVLW       hi_addr(main_bin_str_L0)
0x05F2	0x6EEA      	MOVWF       FSR0L+1 
0x05F4	0x501F      	MOVF        main_i_L0, 0 
0x05F6	0x26E9      	ADDWF       FSR0L, 1 
0x05F8	0xB0D8      	BTFSC       STATUS, 0 
0x05FA	0x2AEA      	INCF        FSR0L+1, 1 
0x05FC	0xF026CFEE  	MOVFF       POSTINC0, FARG_lcd_char_my_cmd
0x0600	0xDE50      	RCALL       _lcd_char_my
;DZ.c,307 :: 		for (i = 0; i < 8; i++) {
0x0602	0x2A1F      	INCF        main_i_L0, 1 
;DZ.c,309 :: 		}
0x0604	0xD7EB      	BRA         L_main41
L_main42:
;DZ.c,314 :: 		}
0x0606	0xD7D0      	BRA         L_main37
;DZ.c,315 :: 		}
L_end_main:
0x0608	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [18]    _pulse_e
0x002E      [96]    _lcd_cmd_4
0x008E      [38]    _lcd_cmd_my
0x00B4      [64]    _check_rows
0x00F4      [18]    _lcd_init_r
0x0106      [58]    _lcd_init_all
0x0140     [144]    _to_binary
0x01D0     [210]    _check_keyboard
0x02A2      [78]    _lcd_char_my
0x02F0     [794]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0005       [1]    ?FLOC___to_binaryT7
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [9]    main_bin_str_L0
0x001E       [1]    main_count_L0
0x001F       [1]    main_i_L0
0x0020       [1]    main_j_L0
0x0021       [1]    main_k_L0
0x0022       [1]    main_input_value_L0
0x0023       [1]    main_keyboard_result_L0
0x0024       [1]    FARG_lcd_char_my_row
0x0024       [1]    check_keyboard_keyboard_result_L0
0x0024       [1]    FARG_to_binary_val
0x0025       [1]    check_keyboard_row_result_L0
0x0025       [2]    FARG_to_binary_buffer
0x0025       [1]    FARG_lcd_char_my_column
0x0026       [1]    FARG_lcd_char_my_cmd
0x0027       [1]    lcd_char_my_adress_L0
0x0027       [2]    to_binary_i_L0
0x0029       [1]    FARG_lcd_cmd_my_cmd
0x0029       [1]    check_rows_row_result_L0
0x002A       [1]    FARG_lcd_cmd_4_cmd
0x0F80       [0]    ROW_1
0x0F80       [0]    ROW_0
0x0F80       [0]    ROW_3
0x0F80       [0]    RA4_bit
0x0F80       [0]    ROW_2
0x0F80       [0]    RA7_bit
0x0F80       [0]    RA5_bit
0x0F80       [0]    RA6_bit
0x0F89       [0]    COL_2
0x0F89       [0]    COL_3
0x0F89       [0]    LATA0_bit
0x0F89       [0]    COL_1
0x0F89       [0]    LATA2_bit
0x0F89       [0]    LATA1_bit
0x0F89       [0]    LATA3_bit
0x0F89       [0]    COL_0
0x0F8A       [0]    LATB5_bit
0x0F8A       [0]    LCD_EN
0x0F8A       [0]    LCD_RS
0x0F8A       [0]    LATB2_bit
0x0F8C       [0]    LCD_D4
0x0F8C       [0]    LATD5_bit
0x0F8C       [0]    LATD4_bit
0x0F8C       [0]    LCD_D7
0x0F8C       [0]    LCD_D6
0x0F8C       [0]    LCD_D5
0x0F8C       [0]    LATD7_bit
0x0F8C       [0]    LATD6_bit
0x0F92       [0]    TRISA5_bit
0x0F92       [0]    TRISA4_bit
0x0F92       [0]    ROW_2_Direction
0x0F92       [0]    TRISA0_bit
0x0F92       [0]    TRISA3_bit
0x0F92       [0]    COL_2_Direction
0x0F92       [0]    TRISA2_bit
0x0F92       [0]    ROW_3_Direction
0x0F92       [0]    TRISA1_bit
0x0F92       [0]    COL_1_Direction
0x0F92       [0]    COL_3_Direction
0x0F92       [0]    ROW_0_Direction
0x0F92       [0]    ROW_1_Direction
0x0F92       [0]    TRISA6_bit
0x0F92       [0]    COL_0_Direction
0x0F92       [0]    TRISA7_bit
0x0F93       [0]    LCD_RS_Direction
0x0F93       [0]    LCD_EN_Direction
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    TRISB5_bit
0x0F95       [0]    TRISD5_bit
0x0F95       [0]    LCD_D4_Direction
0x0F95       [0]    TRISD4_bit
0x0F95       [0]    TRISD7_bit
0x0F95       [0]    LCD_D6_Direction
0x0F95       [0]    TRISD6_bit
0x0F95       [0]    LCD_D5_Direction
0x0F95       [0]    LCD_D7_Direction
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
